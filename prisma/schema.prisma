// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  fullName    String
  phoneNumber String   @unique
  kycStatus   KYCStatus @default(PENDING)
  wallets     Wallet[]
  transactions Transaction[]
  auditLogs   AuditLog[]
  createdAt   DateTime @default(now())
}

model Wallet {
  id        String      @id @default(uuid())
  balance   Float       @default(0.0)
  currency  String      @default("NGN")
  status    WalletStatus @default(ACTIVE)
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  transactions Transaction[]
  createdAt DateTime    @default(now())
}

model Transaction {
  id             String         @id @default(uuid())
  amount         Float
  transactionType TransactionType
  status         TransactionStatus @default(PENDING)
  description    String?
  wallet         Wallet        @relation(fields: [walletId], references: [id])
  walletId       String
  user           User          @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime      @default(now())
}

model AuditLog {
  id        String   @id @default(uuid())
  user      User          @relation(fields: [userId], references: [id])
  userId    String
  action    String
  details   String
  createdAt DateTime @default(now())
}

enum KYCStatus {
  PENDING
  APPROVED
  REJECTED
}

enum WalletStatus {
  ACTIVE
  BLOCKED
}

enum TransactionType {
  CREDIT
  DEBIT
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}
